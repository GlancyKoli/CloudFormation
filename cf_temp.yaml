AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for DynamoDB table and Lambda function'

Resources:
  StudentTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Students
      AttributeDefinitions:
        - AttributeName: StudentID
          AttributeType: S
      KeySchema:
        - AttributeName: StudentID
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !GetAtt StudentTable.Arn

  CreateStudentFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CreateStudentAPI
      Handler: index.create_student
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.12
      Code:
        S3Bucket: studentdemobucket
        S3Key: index.zip
      Timeout: 10

  ReadStudentFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ReadStudentAPI
      Handler: index.get_student
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.12
      Code:
        S3Bucket: studentdemobucket
        S3Key: index.zip
      Timeout: 10

  UpdateStudentFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: UpdateStudentAPI
      Handler: index.update_student
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.12
      Code:
        S3Bucket: studentdemobucket
        S3Key: index.zip
      Timeout: 10

  DeleteStudentFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: DeleteStudentAPI
      Handler: index.delete_student
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.12
      Code:
        S3Bucket: studentdemobucket
        S3Key: index.zip
      Timeout: 10

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: StudentAPI

  ApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: students
      RestApiId: !Ref ApiGateway

  MyGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref ApiResource
      RestApiId: !Ref ApiGateway
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/${ReadStudentFunction.Arn}/invocations

  MyPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref ApiResource
      RestApiId: !Ref ApiGateway
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/${CreateStudentFunction.Arn}/invocations
       
  MyDeleteMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      ResourceId: !Ref ApiResource
      RestApiId: !Ref ApiGateway
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/${DeleteStudentFunction.Arn}/invocations
        
  MyPatchMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: PATCH
      ResourceId: !Ref ApiResource
      RestApiId: !Ref ApiGateway
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:ap-south-1:lambda:path/2015-03-31/functions/${UpdateStudentFunction.Arn}/invocations
        
  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: 
      - MyGetMethod
      - MyPostMethod
      - MyDeleteMethod
      - MyPatchMethod
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: prod

  CreateLambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CreateStudentFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:ap-south-1:194026924171:${ApiGateway}/*/*/students

  ReadLambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ReadStudentFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:ap-south-1:194026924171:${ApiGateway}/*/*/students

  UpdateLambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref UpdateStudentFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:ap-south-1:194026924171:${ApiGateway}/*/*/students

  DeleteLambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DeleteStudentFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:ap-south-1:194026924171:${ApiGateway}/*/*/students

Outputs:
  ApiUrl:
    Description: URL of the API Gateway endpoint
    Value: !Sub https://ap-south-1.execute-api.${AWS::Region}.amazonaws.com/prod/students
